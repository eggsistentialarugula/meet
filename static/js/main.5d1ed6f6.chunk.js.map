{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","WelcomeScreen.jsx","EventGenre.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","showDetails","toggleVisibility","setState","this","event","props","className","summary","location","start","dateTime","end","onClick","description","creator","email","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","NetworkAlert","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","infoText","handleItemClicked","suggestion","updateEvents","class","type","onChange","onFocus","display","NumberOfEvents","numberOfEvents","handleInputChange","eventCount","eventNum","errorText","updateEventCount","e","WelcomeScreen","showWelcomeScreen","align","src","alt","getAccessToken","rel","href","EventGenre","useState","data","setData","useEffect","genre","split","includes","name","COLORS","ResponsiveContainer","width","height","PieChart","Pie","cx","cy","labelLine","outerRadius","fill","dataKey","label","percent","toFixed","entry","index","Cell","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getEvents","NProgress","startsWith","done","navigator","onLine","getItem","console","log","JSON","parse","token","url","axios","get","stringify","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","currentLocation","locationEvents","slice","getData","number","city","shift","mounted","isTokenValid","ScatterChart","margin","top","right","bottom","left","CartesianGrid","XAxis","YAxis","allowDecimals","Tooltip","cursor","strokeDasharray","Scatter","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","atatus","install"],"mappings":"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","file":"static/js/main.5d1ed6f6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n    state = {\r\n        showDetails: false,\r\n    };\r\n\r\n    toggleVisibility = () => {\r\n        if (this.state.showDetails === false) {\r\n            this.setState({ showDetails: true });\r\n        } else {\r\n            this.setState({ showDetails: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const showDetails = this.state.showDetails;\r\n        const { event } = this.props;\r\n\r\n        return (\r\n            <div className=\"event-container\">\r\n                <div className=\"event-overview\">\r\n                    <span className=\"event-title\">{event.summary}</span>\r\n                    <br></br>\r\n                    <span className=\"event-location\">{event.location}</span>\r\n                    <br></br>\r\n                    <span className=\"event-time\">From {event.start.dateTime} to {event.end.dateTime}</span>\r\n                    <br></br>\r\n                    {!showDetails && (\r\n                        <button className=\"toggle-button\" onClick={this.toggleVisibility}>\r\n                            Show Details\r\n                        </button>\r\n                    )}\r\n                    {showDetails && (\r\n                        <button className=\"toggle-button\" onClick={this.toggleVisibility}>\r\n                            Hide Details\r\n                        </button>\r\n                    )}\r\n                </div>\r\n\r\n                {showDetails && (\r\n                    <div className=\"event-details\">\r\n                        <span className=\"event-description\">{event.description}</span>\r\n                        <br></br>\r\n                        <span className=\"creator-email\">{event.creator.email}</span>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n    render() {\r\n        const { events } = this.props;\r\n        return (\r\n            <ul className=\"EventList\">\r\n                {events.map(event =>\r\n                    <li key={event.id} className=\"EventItem\">\r\n                        <Event event={event} />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = null;\r\n    }\r\n\r\n    getStyle = () => {\r\n        return {\r\n            color: this.color,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Alert\">\r\n                <p style={this.getStyle()}>{this.props.text}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'rgb(44,179,225)';\r\n    }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'red';\r\n    }\r\n}\r\n\r\nclass NetworkAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = '#6eeeff';\r\n    }\r\n}\r\n\r\nexport { InfoAlert, ErrorAlert, NetworkAlert }","import React, { Component } from 'react';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n    // define class component's state\r\n    state = {\r\n        query: '',\r\n        suggestions: [],\r\n        showSuggestions: undefined,\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({ showSuggestions: true });\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        });\r\n\r\n        if (suggestions.length === 0) {\r\n            this.setState({\r\n                query: value,\r\n                infoText: 'We can not find the city you are looking for. Please try another city.',\r\n            });\r\n        } else {\r\n            return this.setState({\r\n                query: value,\r\n                suggestions,\r\n                infoText: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n            query: suggestion,\r\n            suggestions: [],\r\n            showSuggestions: false,\r\n            infoText: ''\r\n        });\r\n        this.props.updateEvents(suggestion);\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"CitySearch\">\r\n                <label class=\"searchCity-title\">Search for a</label>\r\n                <label class=\"searchCity-title\">nearby city</label>\r\n                <InfoAlert text={this.state.infoText} />\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"city\"\r\n                    value={this.state.query}\r\n                    onChange={this.handleInputChanged}\r\n                    onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n                />\r\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n                    {this.state.suggestions.map((suggestion) => (\r\n                        <li\r\n                            key={suggestion}\r\n                            onClick={() => this.handleItemClicked(suggestion)}\r\n                        >{suggestion}\r\n                        </li>\r\n                    ))}\r\n                    <li onClick={() => this.handleItemClicked(\"all\")}>\r\n                        <b>See all cities</b>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CitySearch;","import React, { Component } from \"react\";\r\nimport { ErrorAlert } from './Alert'\r\n\r\nclass NumberOfEvents extends Component {\r\n    state = {\r\n        numberOfEvents: 32,\r\n        infoText: '',\r\n    };\r\n\r\n    handleInputChange = (eventCount) => {\r\n        const eventNum = eventCount.target.value;\r\n        if (eventNum <= 0 || eventNum > 32) {\r\n            return this.setState({\r\n                infoText: 'Please enter a number between 1 and 32',\r\n                numberOfEvents: ''\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                numberOfEvents: eventNum,\r\n                errorText: '',\r\n            })\r\n            this.props.updateEventCount(eventCount.target.value);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"numberOfEvents\">\r\n                <label className=\"numEvents-label\">\r\n                    Number of Events <br></br>\r\n                </label>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"event-number-input\"\r\n                    value={this.state.numberOfEvents}\r\n                    onChange={e => this.handleInputChange(e)}\r\n                />\r\n                <ErrorAlert text={this.state.infoText} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NumberOfEvents;","import React from \"react\";\r\nimport './WelcomeScreen.css';\r\n\r\nfunction WelcomeScreen(props) {\r\n    return props.showWelcomeScreen ?\r\n        (\r\n            <div className=\"WelcomeScreen\">\r\n                <div className=\"bg\"></div>\r\n                <h1>Welcome to the Meet App</h1>\r\n                <h4>\r\n                    Log in to see upcoming events around the world for full-stack developers\r\n                </h4>\r\n                <div className=\"button_cont\" align=\"center\">\r\n                    <div class=\"google-btn\">\r\n                        <div class=\"google-icon-wrapper\">\r\n                            <img class=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"Google sign-in\" />\r\n                        </div>\r\n                        <button onClick={() => { props.getAccessToken() }} rel=\"nofollow noopener\" class=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <a href=\"https://eggsistentialarugula.github.io/meet/privacy.html\" target=\"_blank\" rel=\"nofollow noreferrer noopener\" class=\"policy\">Privacy Policy</a>\r\n            </div>\r\n\r\n        )\r\n        : null\r\n}\r\nexport default WelcomeScreen;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    PieChart, Pie, Cell, ResponsiveContainer\r\n} from 'recharts';\r\n\r\nconst EventGenre = ({ events }) => {\r\n    const [data, setData] = useState([]);\r\n\r\n    const getData = () => {\r\n        const genres = ['React', 'JavaScript', 'Node', 'jQuery', 'AngularJS'];\r\n        const data = genres.map((genre) => {\r\n            const value = events.filter((event) => event.summary.split(' ').includes(genre)).length;\r\n            return { name: genre, value };\r\n        });\r\n        return data;\r\n    };\r\n\r\n    useEffect(() => {\r\n        setData(() => getData());\r\n    }, [events]);\r\n\r\n    // useEffect(() => {\r\n    //     setData(() => getData());\r\n    //     console.log(getData);\r\n    // }, [events]);\r\n\r\n    const COLORS = ['#ffcf4d', '#f288e8', '#b391ff', '#879cff', '#66ffe3'];\r\n\r\n    return (\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <PieChart width={400} height={400}>\r\n                <Pie\r\n                    data={data}\r\n                    cx={200}\r\n                    cy={200}\r\n                    labelLine={false}\r\n                    outerRadius={80}\r\n                    fill=\"#8884d8\"\r\n                    dataKey=\"value\"\r\n                    label={({ name, percent }) => `\r\n                    ${name} ${(percent * 100).toFixed(0)}%`\r\n                    }>\r\n                    {\r\n                        data.map((entry, index) => (\r\n                            <Cell\r\n                                key={`cell-${index}`}\r\n                                fill={COLORS[index % COLORS.length]}\r\n                                name={entry.name} />\r\n                        ))\r\n                    }\r\n                </Pie>\r\n            </PieChart>\r\n        </ResponsiveContainer>\r\n    )\r\n}\r\nexport default EventGenre;","const mockData = [\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181161784712000\\\"\",\r\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:17:46.000Z\",\r\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n        \"summary\": \"Learn JavaScript\",\r\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n        \"location\": \"London, UK\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    },\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181159875584000\\\"\",\r\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:14:30.000Z\",\r\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n        \"summary\": \"React is Fun\",\r\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n        \"location\": \"Berlin, Germany\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    },\r\n];\r\n\r\nexport { mockData };","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\nconst extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    return locations;\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n    const result = await fetch(\r\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n    )\r\n        .then((res) => res.json())\r\n        .catch((error) => error.json());\r\n\r\n    return result;\r\n};\r\n\r\nconst removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname) {\r\n        var newurl =\r\n            window.location.protocol +\r\n            \"//\" +\r\n            window.location.host +\r\n            window.location.pathname;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    } else {\r\n        newurl = window.location.protocol + \"//\" + window.location.host;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const { access_token } = await fetch(\r\n        `https://gk2jlemf4g.execute-api.us-west-1.amazonaws.com/dev/api/token/${encodeCode}`\r\n        // 'https://gk2jlemf4g.execute-api.us-west-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n    )\r\n        .then((res) => {\r\n            return res.json();\r\n        })\r\n        .catch((error) => error);\r\n\r\n    access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n    return access_token;\r\n};\r\n\r\nconst getEvents = async () => {\r\n    NProgress.start();\r\n\r\n    if (window.location.href.startsWith('http://localhost')) {\r\n        NProgress.done();\r\n        return mockData;\r\n    }\r\n    if (!navigator.onLine) {\r\n        const events = localStorage.getItem(\"lastEvents\");\r\n        NProgress.done();\r\n        console.log(events);\r\n        return events ? JSON.parse(events).events : [];\r\n    };\r\n\r\n    const token = await getAccessToken();\r\n\r\n    if (token) {\r\n        removeQuery();\r\n        const url = `https://gk2jlemf4g.execute-api.us-west-1.amazonaws.com/dev/api/get-events/${token}`;\r\n        const result = await axios.get(url);\r\n        if (result.data) {\r\n            var locations = extractLocations(result.data.events);\r\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n        }\r\n        NProgress.done();\r\n        return result.data.events;\r\n    }\r\n};\r\n\r\nconst getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n    if (!accessToken || tokenCheck.error) {\r\n        await localStorage.removeItem(\"access_token\");\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = await searchParams.get(\"code\");\r\n        if (!code) {\r\n            const results = await axios.get(\r\n                \"https://gk2jlemf4g.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url\"\r\n            );\r\n            const { authUrl } = results.data;\r\n            return (window.location.href = authUrl);\r\n        }\r\n        return code && getToken(code);\r\n    }\r\n    return accessToken;\r\n}\r\n\r\nexport { getEvents, getAccessToken, extractLocations, getToken, checkToken };","import React, { Component } from 'react';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport WelcomeScreen from './WelcomeScreen';\nimport EventGenre from './EventGenre';\nimport { getEvents, extractLocations, checkToken, getAccessToken } from './api';\nimport { NetworkAlert } from './Alert';\nimport {\n  ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer\n} from 'recharts';\nimport './App.css';\nimport \"./nprogress.css\";\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n    currentLocation: 'all',\n    showWelcomeScreen: undefined\n  }\n\n  // async componentDidMount() {\n  //   this.mounted = true;\n  //   const accessToken = localStorage.getItem('access_token');\n  //   const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n  //   const searchParams = new URLSearchParams(window.location.search);\n  //   const code = searchParams.get(\"code\");\n  //   this.setState({ showWelcomeScreen: !(code || isTokenValid) });\n  //   if ((code || isTokenValid) && this.mounted) {\n  //     getEvents().then((events) => {\n  //       if (this.mounted) {\n  //         this.setState({ events, locations: extractLocations(events) });\n  //       }\n  //     });\n  //   }\n  // }\n\n  async componentDidMount() {\n    this.mounted = true;\n    const accessToken = localStorage.getItem('access_token');\n    const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get(\"code\");\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) });\n    if ((code || isTokenValid) && this.mounted) {\n      getEvents().then((events) => {\n        if (this.mounted) {\n          this.setState({\n            events: events.slice(0, this.state.numberOfEvents),\n            locations: extractLocations(events)\n          })\n        }\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (location, eventCount) => {\n    getEvents().then((events) => {\n      let locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      locationEvents = locationEvents.slice(0, eventCount)\n      this.setState({\n        events: locationEvents,\n        currentLocation: location\n      });\n    });\n  }\n\n  updateEventCount = (eventCount) => {\n    this.setState({\n      numberOfEvents: eventCount\n    });\n    const { currentLocation } = this.state;\n    this.updateEvents(currentLocation, eventCount);\n  };\n\n  getData = () => {\n    const { locations, events } = this.state;\n    const data = locations.map((location) => {\n      const number = events.filter((event) => event.location === location).length\n      const city = location.split(', ').shift()\n      return { city, number };\n    })\n    return data;\n  };\n\n  render() {\n    if (this.state.showWelcomeScreen === undefined) return <div className=\"App\" />\n    return (\n      <div className=\"App\">\n        {!navigator.onLine ? (<NetworkAlert text='You are offline, information you are viewing will be out of date. To view updated information, connect to the internet.' />) : (<NetworkAlert text='' />)}\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents numberOfEvents={this.state.numberOfEvents} updateEventCount={(e) => this.updateEventCount(e)} />\n        <h4>Events in each city</h4>\n        <div className=\"data-vis-wrapper\">\n          <EventGenre events={this.state.events} />\n          <ResponsiveContainer height={400}>\n            <ScatterChart margin={{\n              top: 20, right: 20, bottom: 20, left: 20,\n            }}>\n              <CartesianGrid />\n              <XAxis type=\"category\" dataKey=\"city\" name=\"City\" />\n              <YAxis type=\"number\" dataKey=\"number\" name=\"Number of Events\" allowDecimals={false} />\n              <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n              <Scatter data={this.getData()} fill=\"#000\" />\n            </ScatterChart>\n          </ResponsiveContainer>\n        </div>\n\n        <EventList events={this.state.events} />\n        <WelcomeScreen showWelcomeScreen={this.state.showWelcomeScreen} getAccessToken={() => { getAccessToken() }} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\natatus.config('575e4186968e48eba198bc2ee2798415').install();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}